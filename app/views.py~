from flask import render_template, flash, redirect,request,session,g
from flask.ext.login import login_user,logout_user,current_user,login_required,user_logged_in
from app import app,lm
from models import *
from .forms import LoginForm,SignupForm

@lm.user_loader
def load_user(id):
	c=sqlite3.connect('test.db')
	c=c.execute('SELECT * from users where id=(?)',[id])
	userrow = c.fetchone()
	if userrow!=None:
		return User(userrow[1],userrow[2],userrow[3],userrow[4])
@app.route('/')
@app.route('/index')
def index():
    user = {'nickname': 'Miguel'}
    posts = [
        {
            'author': {'nickname': 'John'},
            'body': 'Beautiful day in Portland!'
        },
        {
            'author': {'nickname': 'Susan'},
            'body': 'The Avengers movie was so cool!'
        }
    ]
    return render_template('index.html',
                           title='Home',
                           user=user,
                           posts=posts)
@app.route('/login', methods=['GET', 'POST'])
def login():
    if current_user.is_authenticated():
	return redirect("/index")
    form = LoginForm()
    if form.validate_on_submit():
    	username=form.username.data
	password=form.password.data
	remember=bool(form.rememberme.data)
	c=sqlite3.connect('test.db')
	passcheck=False
	pa=c.execute("SELECT password,email,confirm from users where username=(?)",[username])
	for x in pa:
		print x[0],x[1],x[2]
               	email=x[0]
               	password1=x[1]
               	confirm=x[2]
	print password,password1,username
	passcheck=password==password1
	ruser=None
	if passcheck:
		ruser=User(username,password,email,confirm)
	if ruser is None:
		return render_template('login.html',title='sign in error',form=form,error='incorrect username or password')
	login_user(ruser,remember)
	return redirect(request.args.get('next') or '/index')
    return render_template('login.html', 
                           title='Sign In',
                           form=form)
    return render_template('login.html',title='sign in',form=form)
@app.route('/register',methods=['GET','POST'])
def register():
	form=SignupForm()
	if form.validate_on_submit():
		user=User(form.username.data,form.email.data,form.password.data,False)
		try:
			user.add()
			try:
				confirm_email(form.email.data,"confirm")
			except:None
			flash('User successfully registered check your email and click the link to confirm your email')
			return redirect('/login')
		except:
			return render_template('register.html',form=form,title='register',error='user already exist')
	return render_template('register.html',form=form,title='register')
